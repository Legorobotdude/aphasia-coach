rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User document rules
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
      
      // Invites Subcollection Rules
      match /invites/{inviteId} {
        allow read, write: if request.auth.uid == userId;
      }

      // Onboarding Answers Subcollection Rules
      match /onboardingAnswers/{answerId} {
        allow read, write: if request.auth.uid == userId;
      }

      // Generated Prompts Subcollection Rules
      match /generatedPrompts/{promptId} {
        allow read, write: if request.auth.uid == userId;
      }
    }
    
    // Topics collection rules
    match /topics/{userId}/{topicId} {
      allow read, write: if request.auth.uid == userId;
    }
    
    // Sessions collection (Top-level by session ID)
    match /sessions/{sessionId} {
      allow read: if request.auth.uid == resource.data.ownerUid;
      allow write: if (request.method == 'create' && request.resource.data.ownerUid == request.auth.uid) || 
                     (request.method == 'update' && resource.data.ownerUid == request.auth.uid);
                     
      // Utterances subcollection (Direct path access)
      match /utterances/{utteranceId} {
        allow read, write: if exists(/databases/$(database)/documents/sessions/$(sessionId)) &&
                           request.auth.uid == get(/databases/$(database)/documents/sessions/$(sessionId)).data.ownerUid;
      }
    }
    
    // Utterances CollectionGroup Query Rule
    match /utterances/{utteranceId} {
        // Allow read if the ownerUid field exists AND matches the user.
        allow read: if 'ownerUid' in resource.data && request.auth.uid == resource.data.ownerUid;
        // Deny write via collection group for safety.
        allow write: if false;
    }
  }
}