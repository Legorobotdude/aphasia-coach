---
description: Dashboard
globs: 
alwaysApply: false
---
# Dashboard Feature (`/dashboard`)

This rule describes the user progress dashboard feature of the Aphasia Coach app, located under [app/dashboard](mdc:app/dashboard).

## Overview

The dashboard displays the user's progress, including accuracy trends, response latency, daily streaks, and words needing more practice. It also provides a way to invite caregivers.

## Key Components

*   **Entry Point:** [app/dashboard/page.tsx](mdc:app/dashboard/page.tsx)
    *   Handles authentication checks (`useAuth`).
    *   Fetches data using `useSWR` for:
        *   Recent sessions from the `sessions` collection.
        *   **Prompts to revisit:** Uses a `fetchPromptsToRevisit` function to query the `users/{uid}/generatedPrompts` collection for prompts where `timesUsed > 0` and `lastScore < 0.6`. Results are ordered by `lastScore` and `lastUsedAt`.
        *   Caregiver invites from the `users/{uid}/invites` subcollection.
    *   Calculates derived metrics (streak - *currently placeholder*).
    *   Passes `RevisitPromptItem[]` (containing `id`, `text`, `lastScore`) to the `WordRevisitList` component.
    *   Renders the dashboard layout and child components (dynamically imported).
*   **UI Components:** Located in [app/dashboard/components](mdc:app/dashboard/components)
    *   [AccuracyChart.tsx](mdc:app/dashboard/components/AccuracyChart.tsx): Displays accuracy trend.
    *   [LatencyChart.tsx](mdc:app/dashboard/components/LatencyChart.tsx): Displays average response latency.
    *   [StreakWidget.tsx](mdc:app/dashboard/components/StreakWidget.tsx): Shows current streak and heatmap.
    *   [WordRevisitList.tsx](mdc:app/dashboard/components/WordRevisitList.tsx):
        *   Receives an array of `RevisitPromptItem` objects.
        *   Displays the prompt `text` and `lastScore` (formatted as a percentage).
        *   Includes a "Practice" button for each prompt that links to the voice session in focus mode: `/session?mode=focus&promptId={promptDocId}` (using the ID of the prompt from `generatedPrompts`).
    *   [SessionTable.tsx](mdc:app/dashboard/components/SessionTable.tsx): Displays recent session details.
    *   [CaregiverInvite.tsx](mdc:app/dashboard/components/CaregiverInvite.tsx): Handles caregiver invites.

## Data Flow & Persistence

1.  **Fetching:** `DashboardPage` uses SWR hooks:
    *   `fetchRecentSessions` queries the `sessions` collection.
    *   `fetchPromptsToRevisit` queries the `users/{uid}/generatedPrompts` collection for low-scoring, previously attempted prompts.
    *   `fetchInvites` queries `users/{uid}/invites`.
2.  **Calculation:** Derived metrics like streak are calculated in `DashboardPage`.
3.  **Persistence (Invites):** `CaregiverInvite` handles writing to `users/{uid}/invites`.

## Firestore Dependencies

*   Relies on data in the `sessions` collection.
*   **Crucially relies on data in the `users/{uid}/generatedPrompts` subcollection, specifically the `timesUsed` and `lastScore` fields, for the "Words to Revisit" feature.**
*   Reads/Writes to `users/{uid}/invites`.
*   Requires Firestore indexes for `sessions` and `generatedPrompts` as defined in [firestore.indexes.json](mdc:firestore.indexes.json).

## Important Considerations

*   **Prompt System Interaction:** The dashboard's "Words to Revisit" functionality is directly tied to the [prompt-system.mdc](mdc:.cursor/rules/prompt-system.mdc) and the data updated in `users/{uid}/generatedPrompts` by the voice session feature.
*   **Client-Side Rendering:** Chart components and others are dynamically imported.
*   **Placeholder Logic:** Streak calculation may still use placeholder logic.
*   **Firestore Indexes:** Efficient querying of `generatedPrompts` is essential for dashboard performance.
